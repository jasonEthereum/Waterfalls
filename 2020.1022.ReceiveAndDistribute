pragma solidity >=0.4.22 <0.6.0;

/* In this simple example, there are two partners. 
The contract will first receive funds. 
Funds received are added to the partners respective capital accounts. 

We can check the balance held in the contract with the checkBalance function
Distributions will be made by calling the makeDistributions function.  */

contract ReceiveAndDistribute {
address owner;

uint256 Partner1Share = 10;
uint256 Partner2Share = 90;

uint256 Partner1CapitalAccount = 0;
uint256 Partner2CapitalAccount = 0;

uint256 CumulativeReceivedBalance = 0;
uint256 CumulativePaidOutBalance = 0;

uint256 units = 100;

address payable  Partner1 = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;
address payable  Partner2 = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;

    constructor() public{
        owner = msg.sender;
    }

    function receivePmts() payable external {
        CumulativeReceivedBalance += msg.value;
        Partner1CapitalAccount += msg.value * Partner1Share / units;
        Partner2CapitalAccount += msg.value * Partner2Share / units;
    }

    function makeDistributions() payable external {
        distrib2P1() ;
        distrib2P2() ;
    }

    function distrib2P1() payable public {
        CumulativePaidOutBalance += Partner1CapitalAccount;
        Partner1.transfer(Partner1CapitalAccount);  
        Partner1CapitalAccount = 0;
    }
    function distrib2P2() payable public {
        CumulativePaidOutBalance +=   Partner2CapitalAccount;
        Partner2.transfer(Partner2CapitalAccount);  
        Partner2CapitalAccount = 0;
    }

    function getBalanceOfThisContract() public view returns (uint) {
        //how to return the total balance locked in this contract???
        //return this.balance;
        return 5; 
    }

    function checkCumulativeReceivedBalance() public view returns(uint256) {return(CumulativeReceivedBalance);}
    function checkCumulativePaidOutBalance() public view returns(uint256) {return(CumulativePaidOutBalance);}
    function checkContractNetBalance() public view returns(uint256) {return(CumulativeReceivedBalance-CumulativePaidOutBalance);}

    function checkPartner1CapitalAcct() public view returns(uint256) {return(Partner1CapitalAccount);}
    function checkPartner2CapitalAcct() public view returns(uint256) {return(Partner2CapitalAccount);}
    function whoami () public view returns (address){return msg.sender;}



}
